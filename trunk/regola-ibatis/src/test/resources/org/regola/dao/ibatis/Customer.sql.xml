<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD Sql Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Customer">

	<typeAlias alias="Customer" type="org.regola.model.Customer" />

	<resultMap class="Customer" id="customerMap">
		<result property="id" column="ID" />
		<result property="firstName" column="FIRSTNAME" />
		<result property="lastName" column="LASTNAME" />
		<result property="address.street" column="STREET" />
		<result property="address.city" column="CITY" />
	</resultMap>

	<sql id="select">
		<![CDATA[
			SELECT ID, FIRSTNAME, LASTNAME, STREET, CITY
			FROM CUSTOMER
		]]>
	</sql>

	<sql id="existsFragment">
		<![CDATA[
			SELECT 1
			FROM CUSTOMER
			WHERE ID = #id#
		]]>
	</sql>

	<sql id="selectCount">
		<![CDATA[
			SELECT COUNT(*)
			FROM CUSTOMER
		]]>
	</sql>

	<sql id="delete">
		<![CDATA[
			DELETE
			FROM CUSTOMER
			WHERE ID = #id#
		]]>
	</sql>

	<sql id="dynamicSelect">
		<include refid="select" />
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		<include refid="dynamicLimit" />
	</sql>

	<sql id="dynamicCount">
		<include refid="selectCount" />
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		<include refid="dynamicLimit" />
	</sql>

	<sql id="dynamicWhere">
		<dynamic prepend="WHERE">
			<iterate property="andConditions" conjunction="AND">

				<!--  L H S  O P E R A N D  -->

				<isEqual property="andConditions[].operator"
					compareValue="ILIKE">
					UPPER(
				</isEqual>

				<isEqual property="andConditions[].property"
					compareValue="address.street">
					STREET
				</isEqual>
				<isEqual property="andConditions[].property"
					compareValue="address.city">
					CITY
				</isEqual>
				<isNotEqual property="andConditions[].property"
					compareValue="address.street">
					<isNotEqual property="andConditions[].property"
						compareValue="address.city">
						$andConditions[].property$
					</isNotEqual>
				</isNotEqual>

				<isEqual property="andConditions[].operator"
					compareValue="ILIKE">
					)
				</isEqual>

				<!--  O P E R A T O R  -->

				<isEqual property="andConditions[].operator"
					compareValue="ILIKE">
					LIKE
				</isEqual>
				<isNotEqual property="andConditions[].operator"
					compareValue="ILIKE">
					$andConditions[].operator$
				</isNotEqual>

				<!--  R H S  O P E R A N D  -->

				<isEqual property="andConditions[].operator"
					compareValue="IN">
					<iterate open="(" conjunction="," close=")"
						property="andConditions[].value">
						#andConditions[].value[]#
					</iterate>
				</isEqual>
				<isEqual property="andConditions[].operator"
					compareValue="ILIKE">
					UPPER(#andConditions[].value#)
				</isEqual>
				<isNotEqual property="andConditions[].operator"
					compareValue="IN">
					<isNotEqual property="andConditions[].operator"
						compareValue="ILIKE">
						#andConditions[].value#
					</isNotEqual>
				</isNotEqual>

			</iterate>
		</dynamic>
	</sql>

	<sql id="dynamicOrderBy">
		<dynamic prepend="ORDER BY">
			<iterate property="orderBy" conjunction=",">

				<isEqual property="orderBy[].property"
					compareValue="address.street">
					STREET
				</isEqual>
				<isEqual property="orderBy[].property"
					compareValue="address.city">
					CITY
				</isEqual>
				<isNotEqual property="orderBy[].property"
					compareValue="address.street">
					<isNotEqual property="orderBy[].property"
						compareValue="address.city">
						$orderBy[].property$
					</isNotEqual>
				</isNotEqual>

				<isEqual property="orderBy[].ascending"
					compareValue="false">
					desc
				</isEqual>
			</iterate>
		</dynamic>
	</sql>

	<sql id="dynamicLimit">
		<dynamic prepend="LIMIT">
			<isNotEmpty property="limit.maxResults">
				#limit.maxResults#
				<isNotEmpty property="limit.firstResult">
					OFFSET #limit.firstResult#
				</isNotEmpty>
			</isNotEmpty>
		</dynamic>
	</sql>

	<select id="get" parameterClass="int" resultMap="customerMap">
		<include refid="select" />
		<![CDATA[
			WHERE ID = #id#
		]]>
	</select>

	<select id="exists" parameterClass="int" resultClass="boolean">
		<include refid="existsFragment" />
	</select>

	<select id="existsEntity" parameterClass="Customer" resultClass="boolean">
		<include refid="existsFragment" />
	</select>

	<delete id="remove" parameterClass="int">
		<include refid="delete" />
	</delete>

	<delete id="removeEntity" parameterClass="Customer">
		<include refid="delete" />
	</delete>

	<insert id="insert" parameterClass="Customer">
		<![CDATA[
			INSERT INTO CUSTOMER (ID, FIRSTNAME, LASTNAME, STREET, CITY)
			VALUES (#id#, #firstName#, #lastName#, #address.street#,
				#address.city#)
		]]>
	</insert>

	<update id="update" parameterClass="Customer">
		<![CDATA[
			UPDATE CUSTOMER
			SET FIRSTNAME = #firstName#, LASTNAME = #lastName#,
				STREET = #address.street#, CITY = #address.city#
			WHERE ID = #id#
		]]>
	</update>

	<select id="find" parameterClass="map" resultMap="customerMap">
		<include refid="dynamicSelect" />
	</select>

	<select id="count" parameterClass="map" resultClass="int">
		<include refid="dynamicCount" />
	</select>

	<select id="getAll" resultMap="customerMap">
		<include refid="select" />
	</select>

</sqlMap>