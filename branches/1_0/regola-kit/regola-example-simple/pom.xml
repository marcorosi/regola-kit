<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.regola</groupId>
        <artifactId>regola-kit</artifactId>
        <version>1.0.1</version>
        <relativePath>../pom.xml</relativePath>
    </parent> 
     
    <artifactId>regola-example-simple</artifactId>
    <packaging>war</packaging>
    <name>REGOLA Toolkit :: An example for IceFaces/Hibernate</name>
    <description>
        REGOLA Toolkit :: An example for IceFaces/Hibernate
    </description>
    
    <properties>
        <!--tomcat.home>${project.build.directory}/apache-tomcat-5.5.25</tomcat.home-->
        <tomcat.home>
            /home/nicola/lavoro/apache-tomcat-5.5.25
        </tomcat.home>
        <netbeans.hint.deploy.server>
            Tomcat55
        </netbeans.hint.deploy.server>
        <integration.host>http://localhost:8080</integration.host>
        <integration.context>
            /${project.artifactId}-${project.version}
        </integration.context>
        <ping.url>
            ${integration.host}${integration.context}/customer-list.html
        </ping.url>
		<!-- per Tomcat	
        <jee.datasource>
            java:jdbc/RegolaExampleDS
        </jee.datasource>
        -->
        <!-- per JBoss -->
        <jee.datasource>java:jdbc/RegolaExampleDS</jee.datasource>
        <!-- Jetty e Tomcat java:comp/env/jdbc/RegolaExampleDS 
			JBoss java:jdbc/RegolaExampleDS
		-->

    </properties>
    
    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/main/webapp</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <excludes>
                    <exclude>**/lib/*</exclude>
                    <exclude>**/classes/*</exclude>
                </excludes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.0</version>
                <configuration>
                    <jettyEnvXml>
                        src/test/resources/jetty/env.xml
                    </jettyEnvXml>
                    <contextPath>/simple</contextPath>
                    <scanIntervalSeconds>30</scanIntervalSeconds>
                    <connectors>
                        <connector
                            implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>8080</port>
                            <maxIdleTime>3600000</maxIdleTime>
                        </connector>
                    </connectors>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*action/*Test.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            
            
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>regola-integration</id>
            <activation>
                <property>
                    <name>integration</name>
                </property>
            </activation>
            <build>
                <plugins>
                    
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip>
                                    <excludes>
                                        <exclude>none</exclude>
                                    </excludes>
                                    <includes>
                                        <include>
                                            **/*action/*Test.java
                                        </include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <!-- Jetty non funziona per i test di integrazione:
						a) jetty non offre i datasource quando lanciato con cargo
						b) jetty non gestisce le url encoded tipo ;jsessionid=xxx impostate da selenium
					-->
                    <!--plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
						<wait>false</wait>
						<container>
						<containerId>jetty6x</containerId>
						<type>embedded</type>
						</container>
						</configuration>
						<executions>
						<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
						<goal>start</goal>
						</goals>
						</execution>
						<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
						<goal>stop</goal>
						</goals>
						</execution>
						</executions>
						</plugin-->

                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        
                        <configuration>
                            <wait>false</wait>
                            <container>
                                <containerId>tomcat5x</containerId>
                                <type>installed</type>
                                <home>${tomcat.home}</home>
                            </container>
                            
                            <configuration>
                                <home>${tomcat.home}</home>
                                <type>existing</type>
                                <properties>
                                    <cargo.logging>high</cargo.logging>
                                    <cargo.servlet.port>
                                        8080
                                    </cargo.servlet.port>
                                    <!--cargo.datasource.datasource>
										cargo.datasource.url=jdbc:hsqldb:hsql://localhost/|
										cargo.datasource.driver=org.hsqldb.jdbcDriver|
										cargo.datasource.username=sa|
										cargo.datasource.password=|
										cargo.datasource.type=javax.sql.DataSource|
										cargo.datasource.jndi=jdbc/RegolaExampleDS
										</cargo.datasource.datasource
										
										<Resource name="jdbc/RegolaExampleDS" auth="Container" type="javax.sql.DataSource"
										maxActive="100" maxIdle="30" maxWait="10000"
										username="sa" password="" driverClassName="org.hsqldb.jdbcDriver"
										url="jdbc:hsqldb:hsql://localhost/"/>
										
									-->
                                </properties>
                            </configuration>
                        </configuration>
                        
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                    <goal>deploy</goal>
                                </goals>
                                <configuration>
                                    <deployer>
                                        
                                        <deployables>
                                            <deployable>
                                                <groupId>
                                                    ${project.groupId}
                                                </groupId>
                                                <artifactId>
                                                    ${project.artifactId}
                                                </artifactId>
                                                <type>war</type>
                                                <pingURL>
                                                    ${ping.url}
                                                </pingURL>
                                                <!--pingTimeout>300000</pingTimeout-->
                                            </deployable>
                                        </deployables>
                                    </deployer>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>selenium-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start-server</goal>
                                </goals>
                                <configuration>
                                    <background>true</background>
                                    <logOutput>true</logOutput>
                                    <multiWindow>true</multiWindow>
                                </configuration>
                            </execution>
                            
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop-server</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <dependencies>
        

  <!-- http://forum.springframework.org/showthread.php?t=42466
       Hibernate 3.2.2 depends on ASM 1.5.3, but Spring's Groovy support requires ASM 2.2.2 [1].
       http://blog.interface21.com/main/2007/06/11/asm-version-incompatibilities-using-spring-autowired-with-hibernate/
  
         <dependency>
    <groupId>asm</groupId>
    <artifactId>asm</artifactId>
    <version>2.2.2</version>
  </dependency>
  
  
  <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-hibernate3</artifactId>

    <exclusions>
      <exclusion>
        <groupId>asm</groupId>
        <artifactId>asm</artifactId>
      </exclusion>
      <exclusion>
        <groupId>asm</groupId>
        <artifactId>asm-attrs</artifactId>
      </exclusion>
      <exclusion>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
      </exclusion>
    </exclusions>
  </dependency>

  <dependency>
    <groupId>cglib</groupId>
    <artifactId>cglib-nodep</artifactId>
    <version>2.1_3</version>
  </dependency>
        
        <dependency>
            <groupId>org.jruby</groupId>
            <artifactId>jruby</artifactId>
            <version>1.0.2</version>
            <exclusions>
                <COMMENT exclusion>
                    <artifactId>asm</artifactId>
                    <groupId>asm</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>asm</artifactId>
                    <groupId>asm-commons</groupId>
                </exclusion ENDCOMMENT>  
                <exclusion>
                    <artifactId>backport-util-concurrent</artifactId>
                    <groupId>backport-util-concurrent</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    
    -->
        
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>regola-jsf-icefaces</artifactId>
            <version>${version}</version>
        </dependency>
        
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>regola-hibernate</artifactId>
            <version>${version}</version>
        </dependency>
        
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>regola-ognl</artifactId>
            <version>${version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.7</version>
        </dependency>
        <!-- Xa transaction pooling per hsqldb -->
        <dependency>
            <groupId>com.experlog</groupId>
            <artifactId>xapool</artifactId>
            <version>1.5.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.openqa.selenium.client-drivers</groupId>
            <artifactId>selenium-java-client-driver</artifactId>
            <version>0.9.2</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.openqa.selenium.server</groupId>
            <artifactId>selenium-server</artifactId>
            <version>0.9.2</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        
        
        
        
        
    </dependencies>
    
    
    
    
</project>
